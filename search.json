[{"path":"https://lmaowisc.github.io/poset/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lu Mao. Maintainer.","code":""},{"path":"https://lmaowisc.github.io/poset/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mao L (2024). poset: Analysis Partially Ordered Data. R package version 1.0.0, https://lmaowisc.github.io/poset/, https://sites.google.com/view/lmaowisc/.","code":"@Manual{,   title = {poset: Analysis of Partially Ordered Data},   author = {Lu Mao},   year = {2024},   note = {R package version 1.0.0, https://lmaowisc.github.io/poset/},   url = {https://sites.google.com/view/lmaowisc/}, }"},{"path":"https://lmaowisc.github.io/poset/index.html","id":"poset","dir":"","previous_headings":"","what":"Analysis of Partially Ordered Data","title":"Analysis of Partially Ordered Data","text":"goal poset …","code":""},{"path":"https://lmaowisc.github.io/poset/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of Partially Ordered Data","text":"can install development version poset like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"https://lmaowisc.github.io/poset/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analysis of Partially Ordered Data","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(poset) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://lmaowisc.github.io/poset/reference/MWRreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplicative win ratio (MWR) regression analysis — MWRreg","title":"Multiplicative win ratio (MWR) regression analysis — MWRreg","text":"Fit multiplicative win ratio (MWR) regression model partially ordered outcome covariates","code":""},{"path":"https://lmaowisc.github.io/poset/reference/MWRreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplicative win ratio (MWR) regression analysis — MWRreg","text":"","code":"MWRreg(Y, Z, wf = NULL, sfun = NULL, ep = 1e-06)"},{"path":"https://lmaowisc.github.io/poset/reference/MWRreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplicative win ratio (MWR) regression analysis — MWRreg","text":"Y \\(n\\times K\\) matrix containing \\(n\\) observations \\(K\\)-dimensional outcome variable (whose components must variable type). Z \\(n\\times p\\) design matrix covariates. wf User-specified win function pairwise comparison. takes two arguments \\(y_1\\) \\(y_0\\) (\\(K\\)-dimensional) returns 1 \\(y_1\\) wins, -1 \\(y_0\\) wins, 0 tied. default wprod based product order multivariate ordinal data. sfun score function used pseudo-efficient estimation (can bypassed). ep Convergence criterion Newton-Raphson algorithm. default 1e-6.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/MWRreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplicative win ratio (MWR) regression analysis — MWRreg","text":"object class MWRreg following components: beta vector estimated regression coefficients. Sigma Estimated covariance matrix beta l Number Newton-Raphson iterations. beta_nv Naive (non-pseudo-efficient) estimates beta. se_nv Estimated standard errors beta_nv. n Sample size \\(n\\) input data. Nwl Number comparable pairs (winner loser) \\(n(n+1)/2\\) possible ones.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/MWRreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiplicative win ratio (MWR) regression analysis — MWRreg","text":"Mao, L. (2024). Win ratio partially ordered data. Statistica Sinica, revision.","code":""},{"path":[]},{"path":"https://lmaowisc.github.io/poset/reference/MWRreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplicative win ratio (MWR) regression analysis — MWRreg","text":"","code":"set.seed(12345) n <- 200 Z <- cbind(rnorm(n),rnorm(n)) Y1 <- rbinom(n,1,exp(Z[,1])/(1+exp(Z[,1]))) obj1 <- MWRreg(Y1,Z) obj1$beta #>           [,1] #> [1,] 1.0878509 #> [2,] 0.1113533 sqrt(diag(obj1$Sigma)) #> [1] 0.2018785 0.1941259 obj1$beta/sqrt(diag(obj1$Sigma)) #>           [,1] #> [1,] 5.3886420 #> [2,] 0.5736138"},{"path":"https://lmaowisc.github.io/poset/reference/WRtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-sample win ratio analysis — WRtest","title":"Two-sample win ratio analysis — WRtest","text":"Perform win ratio (WR) analysis comparing treatment control group.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/WRtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-sample win ratio analysis — WRtest","text":"","code":"WRtest(Y1, Y0, wf = wprod)"},{"path":"https://lmaowisc.github.io/poset/reference/WRtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-sample win ratio analysis — WRtest","text":"Y1 Treatment data \\(n_1\\) subjects (\\(n_1\\times K\\) matrix). Y0 Control data \\(n_0\\) subjects (\\(n_0\\times K\\) matrix). wf User-specified win function pairwise comparison. takes two arguments \\(y_1\\) \\(y_0\\) (\\(p\\)-dimensional) returns 1 \\(y_1\\) wins, -1 \\(y_0\\) wins, 0 tied. default wprod based product order multivariate ordinal data.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/WRtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-sample win ratio analysis — WRtest","text":"object class WRtest following components: theta bivariate vector win/loss fractions LWR. logWR,se Log-win ratio estimate standard error. pval \\(p\\)-value testing WR=1.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/WRtest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-sample win ratio analysis — WRtest","text":"Mao, L. (2024). Win ratio partially ordered data. Statistica Sinica, revision.","code":""},{"path":[]},{"path":"https://lmaowisc.github.io/poset/reference/WRtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-sample win ratio analysis — WRtest","text":"","code":"# load the HF-ACTION trial data"},{"path":"https://lmaowisc.github.io/poset/reference/liver.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset from the HF-ACTION trial — liver","title":"A dataset from the HF-ACTION trial — liver","text":"Heart Failure: Controlled Trial Investigating Outcomes Exercise Training (HF-ACTION) study conducted 2003--2007 investigate whether adding exercise training usual care heart failure patients improves cardiovascular outcomes (O'Conner et al., 2009). dataset high-risk subgroup consisting 741 nonischemic patients baseline cardiopulmonary test duration less equal 12 minutes analyze recurrent hospitalizations well overall survival.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/liver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset from the HF-ACTION trial — liver","text":"","code":"liver"},{"path":"https://lmaowisc.github.io/poset/reference/liver.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset from the HF-ACTION trial — liver","text":"data frame 2,132 rows 4 variables: id Unique patient ID. time Event time (years). status Event type; 1 = hospitalization, 2 = death, 0 = censoring. trt 1 = exercise training, 0 = usual care.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/liver.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A dataset from the HF-ACTION trial — liver","text":"O'CONNOR, C. M., WHELLAN, D. J., LEE, K. L., KETEYIAN, S. J.,  COOPER, L. S., ELLIS, S. J., LEIFER, E. S., KRAUS, W. E., KITZMAN, D. W., BLUMENTHAL, J. . et al. (2009). Efficacy safety exercise training  patients chronic heart failure: Hf-action randomized controlled trial.  J. . Med. Assoc. 301, 1439--1450.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/poset-package.html","id":null,"dir":"Reference","previous_headings":"","what":"poset: Analysis of Partially Ordered Data — poset-package","title":"poset: Analysis of Partially Ordered Data — poset-package","text":"Win ratio approach partially ordered data, multivariate ordinal responses product (consensus) prioritized order. Two-sample tests multiplicative regression models implemented (Mao, 2024).","code":""},{"path":[]},{"path":"https://lmaowisc.github.io/poset/reference/wprod.html","id":null,"dir":"Reference","previous_headings":"","what":"The product-order win function for multivariate ordinal data — wprod","title":"The product-order win function for multivariate ordinal data — wprod","text":"commonly used rule compare    multivariate ordinal data WRtest. winner components    greater equal loser, strictly    least one component.","code":""},{"path":"https://lmaowisc.github.io/poset/reference/wprod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The product-order win function for multivariate ordinal data — wprod","text":"","code":"wprod(y1, y2)"},{"path":"https://lmaowisc.github.io/poset/reference/wprod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The product-order win function for multivariate ordinal data — wprod","text":"y1 \\(K\\)-dimensional vector \\(y_1\\). y0 \\(K\\)-dimensional vector  \\(y_0\\).","code":""},{"path":"https://lmaowisc.github.io/poset/reference/wprod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The product-order win function for multivariate ordinal data — wprod","text":"integer \\({1, 0, -1}\\): 1 \\(y_1 \\ge y_0\\) component-wise, strict inequality least                  one component. -1 \\(y_0 \\ge y_1\\) component-wise, strict inequality least                  one component. 0 Otherwise.","code":""},{"path":[]}]
